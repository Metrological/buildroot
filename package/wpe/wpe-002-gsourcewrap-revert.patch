diff --git a/Source/WebCore/platform/graphics/gstreamer/VideoSinkGStreamer.cpp b/Source/WebCore/platform/graphics/gstreamer/VideoSinkGStreamer.cpp
index 450418a..383eb9a 100644
--- a/Source/WebCore/platform/graphics/gstreamer/VideoSinkGStreamer.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/VideoSinkGStreamer.cpp
@@ -38,7 +38,7 @@
 #include <wtf/Threading.h>
 #include <wtf/OwnPtr.h>
 #include <wtf/gobject/GMutexLocker.h>
-#include <wtf/gobject/GSourceWrap.h>
+#include <wtf/gobject/GMainLoopSource.h>
 
 #if USE(EGL)
 #define WL_EGL_PLATFORM
@@ -135,7 +135,7 @@ struct _WebKitVideoSinkPrivate {
     }
 
     GstSample* sample;
-    GSourceWrap::Dynamic timeoutSource;
+    GMainLoopSource::Simple timeoutSource;
     GMutex sampleMutex;
     GCond dataCondition;
 
@@ -304,7 +304,7 @@ static GstFlowReturn webkitVideoSinkRender(GstBaseSink* baseSink, GstBuffer* buf
     // lower priority sources.
     // See: https://bugzilla.gnome.org/show_bug.cgi?id=610830.
     GstObjectRef protector(GST_OBJECT(sink));
-    priv->timeoutSource.schedule([protector] { webkitVideoSinkTimeoutCallback(WEBKIT_VIDEO_SINK(protector.get())); });
+    priv->timeoutSource.schedule(std::chrono::milliseconds(0), [protector] { webkitVideoSinkTimeoutCallback(WEBKIT_VIDEO_SINK(protector.get())); });
 
     g_cond_wait(&priv->dataCondition, &priv->sampleMutex);
     return GST_FLOW_OK;
diff --git a/Source/WebCore/platform/graphics/gstreamer/WebKitWebSourceGStreamer.cpp b/Source/WebCore/platform/graphics/gstreamer/WebKitWebSourceGStreamer.cpp
index 6c7780d..e8b5485 100644
--- a/Source/WebCore/platform/graphics/gstreamer/WebKitWebSourceGStreamer.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/WebKitWebSourceGStreamer.cpp
@@ -41,7 +41,7 @@
 #include <wtf/Noncopyable.h>
 #include <wtf/gobject/GMutexLocker.h>
 #include <wtf/gobject/GRefPtr.h>
-#include <wtf/gobject/GSourceWrap.h>
+#include <wtf/gobject/GMainLoopSource.h>
 #include <wtf/gobject/GUniquePtr.h>
 #include <wtf/text/CString.h>
 
@@ -135,11 +135,11 @@ struct _WebKitWebSrcPrivate {
     guint64 requestedOffset;
 
     gboolean pendingStart;
-    GSourceWrap::Dynamic startSource;
-    GSourceWrap::Dynamic stopSource;
-    GSourceWrap::Dynamic needDataSource;
-    GSourceWrap::Dynamic enoughDataSource;
-    GSourceWrap::Dynamic seekSource;
+    GMainLoopSource::Simple startSource;
+    GMainLoopSource::Simple stopSource;
+    GMainLoopSource::Simple needDataSource;
+    GMainLoopSource::Simple enoughDataSource;
+    GMainLoopSource::Simple seekSource;
 
     GRefPtr<GstBuffer> buffer;
 
@@ -556,7 +556,7 @@ static GstStateChangeReturn webKitWebSrcChangeState(GstElement* element, GstStat
         GST_DEBUG_OBJECT(src, "READY->PAUSED");
         priv->pendingStart = TRUE;
         GstObjectRef protector(GST_OBJECT(src));
-        priv->startSource.schedule([protector] { webKitWebSrcStart(WEBKIT_WEB_SRC(protector.get())); });
+        priv->startSource.schedule(std::chrono::milliseconds(0), [protector] { webKitWebSrcStart(WEBKIT_WEB_SRC(protector.get())); });
         break;
     }
     case GST_STATE_CHANGE_PAUSED_TO_READY:
@@ -566,7 +566,7 @@ static GstStateChangeReturn webKitWebSrcChangeState(GstElement* element, GstStat
         // cancel pending sources
         removeTimeoutSources(src);
         GstObjectRef protector(GST_OBJECT(src));
-        priv->stopSource.schedule([protector] { webKitWebSrcStop(WEBKIT_WEB_SRC(protector.get())); });
+        priv->stopSource.schedule(std::chrono::milliseconds(0), [protector] { webKitWebSrcStop(WEBKIT_WEB_SRC(protector.get())); });
         break;
     }
     default:
@@ -719,7 +719,7 @@ static void webKitWebSrcNeedDataCb(GstAppSrc*, guint length, gpointer userData)
         return;
 
     GstObjectRef protector(GST_OBJECT(src));
-    priv->needDataSource.schedule([protector] { webKitWebSrcNeedDataMainCb(WEBKIT_WEB_SRC(protector.get())); });
+    priv->needDataSource.schedule(std::chrono::microseconds(0), [protector] { webKitWebSrcNeedDataMainCb(WEBKIT_WEB_SRC(protector.get())); });
 }
 
 static void webKitWebSrcEnoughDataMainCb(WebKitWebSrc* src)
@@ -750,7 +750,7 @@ static void webKitWebSrcEnoughDataCb(GstAppSrc*, gpointer userData)
         return;
 
     GstObjectRef protector(GST_OBJECT(src));
-    priv->enoughDataSource.schedule([protector] { webKitWebSrcEnoughDataMainCb(WEBKIT_WEB_SRC(protector.get())); });
+    priv->enoughDataSource.schedule(std::chrono::microseconds(0), [protector] { webKitWebSrcEnoughDataMainCb(WEBKIT_WEB_SRC(protector.get())); });
 }
 
 static void webKitWebSrcSeekMainCb(WebKitWebSrc* src)
@@ -778,7 +778,7 @@ static gboolean webKitWebSrcSeekDataCb(GstAppSrc*, guint64 offset, gpointer user
     priv->requestedOffset = offset;
 
     GstObjectRef protector(GST_OBJECT(src));
-    priv->seekSource.schedule([protector] { webKitWebSrcSeekMainCb(WEBKIT_WEB_SRC(protector.get())); });
+    priv->seekSource.schedule(std::chrono::microseconds(0), [protector] { webKitWebSrcSeekMainCb(WEBKIT_WEB_SRC(protector.get())); });
     return TRUE;
 }
 
