From 4b78a3490ec9d8581f5d410611b266213bc0d978 Mon Sep 17 00:00:00 2001
From: Philippe Normand <philn@igalia.com>
Date: Thu, 15 Oct 2015 18:20:16 +0200
Subject: [PATCH] uridownloader: forward application messages to parent

This can be useful when the source element created by the
uridownloader needs further configuration. In that case the element
can post an application message which will be forwarded by the
uridownloader into the pipeline. Then on application side the source
element can be handled via the application message.
---
 gst-libs/gst/adaptivedemux/gstadaptivedemux.c |  2 +-
 gst-libs/gst/uridownloader/gsturidownloader.c | 12 ++++++++++--
 gst-libs/gst/uridownloader/gsturidownloader.h |  2 +-
 3 files changed, 12 insertions(+), 4 deletions(-)

diff --git a/gst-libs/gst/adaptivedemux/gstadaptivedemux.c b/gst-libs/gst/adaptivedemux/gstadaptivedemux.c
index 0a12c51..c037fc2 100644
--- a/gst-libs/gst/adaptivedemux/gstadaptivedemux.c
+++ b/gst-libs/gst/adaptivedemux/gstadaptivedemux.c
@@ -335,7 +335,7 @@ gst_adaptive_demux_init (GstAdaptiveDemux * demux,
 
   demux->priv = GST_ADAPTIVE_DEMUX_GET_PRIVATE (demux);
   demux->priv->input_adapter = gst_adapter_new ();
-  demux->downloader = gst_uri_downloader_new ();
+  demux->downloader = gst_uri_downloader_new (GST_ELEMENT(demux));
   demux->stream_struct_size = sizeof (GstAdaptiveDemuxStream);
   demux->priv->segment_seqnum = gst_util_seqnum_next ();
   demux->have_group_id = FALSE;
diff --git a/gst-libs/gst/uridownloader/gsturidownloader.c b/gst-libs/gst/uridownloader/gsturidownloader.c
index 72e5e79..4737e2e 100644
--- a/gst-libs/gst/uridownloader/gsturidownloader.c
+++ b/gst-libs/gst/uridownloader/gsturidownloader.c
@@ -33,6 +33,8 @@ GST_DEBUG_CATEGORY (uridownloader_debug);
 
 struct _GstUriDownloaderPrivate
 {
+  GstElement *parent;
+
   /* Fragments fetcher */
   GstElement *urisrc;
   GstBus *bus;
@@ -148,9 +150,11 @@ gst_uri_downloader_finalize (GObject * object)
 }
 
 GstUriDownloader *
-gst_uri_downloader_new (void)
+gst_uri_downloader_new (GstElement *parent)
 {
-  return g_object_new (GST_TYPE_URI_DOWNLOADER, NULL);
+  GstUriDownloader *downloader = g_object_new (GST_TYPE_URI_DOWNLOADER, NULL);
+  downloader->priv->parent = parent;
+  return downloader;
 }
 
 static gboolean
@@ -255,6 +259,10 @@ gst_uri_downloader_bus_handler (GstBus * bus,
     GST_DEBUG ("Debugging info: %s\n", (dbg_info) ? dbg_info : "none");
     g_error_free (err);
     g_free (dbg_info);
+  } else if (GST_MESSAGE_TYPE (message) == GST_MESSAGE_APPLICATION) {
+    if (downloader->priv->parent) {
+      gst_element_post_message (downloader->priv->parent, gst_message_ref(message));
+    }
   }
 
   gst_message_unref (message);
diff --git a/gst-libs/gst/uridownloader/gsturidownloader.h b/gst-libs/gst/uridownloader/gsturidownloader.h
index 80b8a3e..15ab85a 100644
--- a/gst-libs/gst/uridownloader/gsturidownloader.h
+++ b/gst-libs/gst/uridownloader/gsturidownloader.h
@@ -60,7 +60,7 @@ struct _GstUriDownloaderClass
 
 GType gst_uri_downloader_get_type (void);
 
-GstUriDownloader * gst_uri_downloader_new (void);
+GstUriDownloader * gst_uri_downloader_new (GstElement *parent);
 GstFragment * gst_uri_downloader_fetch_uri (GstUriDownloader * downloader, const gchar * uri, const gchar * referer, gboolean compress, gboolean refresh, gboolean allow_cache, GError ** err);
 GstFragment * gst_uri_downloader_fetch_uri_with_range (GstUriDownloader * downloader, const gchar * uri, const gchar * referer, gboolean compress, gboolean refresh, gboolean allow_cache, gint64 range_start, gint64 range_end, GError ** err);
 void gst_uri_downloader_reset (GstUriDownloader *downloader);
-- 
2.6.1

